import*as DataTier from"./libs/data-tier/data-tier.min.js";import{STATUSES,RANDOM_CHARSETS}from"./test.js";import{Suite}from"./suite.js";import"./views/just-test-view.js";export{getSuite,RANDOM_CHARSETS,createSuite};const suites={},model=DataTier.ties.create("justTestModel",{passed:0,failed:0,skipped:0,total:0,done:0,suites:[]});if(!document.querySelectorAll("just-test-view").length){const e=document.createElement("just-test-view");document.body.appendChild(e)}function getSuite(e){let t;return(t=suites[e.id])||(model.suites.push(e),(t=new Suite(model.suites[model.suites.length-1])).addEventListener("testAdded",onTestAdded),t.addEventListener("testFinished",onTestFinished),t.addEventListener("finished",onSuiteFinished),suites[t.id]=t),t}function createSuite(e){console.warn('deprecated API; will be removed in a few versions forth; please use "getSuite" instead'),model.suites.push(e);const t=new Suite(model.suites[model.suites.length-1]);return t.addEventListener("testAdded",onTestAdded),t.addEventListener("testFinished",onTestFinished),t.addEventListener("finished",onSuiteFinished),suites[t.id]=t,t}function onTestAdded(){model.total++}function onTestFinished(e){const t=e.detail.result;model.done++,t===STATUSES.PASSED?model.passed++:t instanceof Error||t===STATUSES.FAILED||t===STATUSES.ERRORED?model.failed++:t===STATUSES.SKIPPED&&model.skipped++}function onSuiteFinished(e){const t=e.detail.suiteModel;if(t.duration=stringifyDuration(t.duration),model.suites.every(e=>e.done===e.tests.length)){const e=document.querySelector("just-test-view");e&&(e.results=model)}}function stringifyDuration(e){let t="";return t=e>99?(e/1e3).toFixed(1)+" s"+String.fromCharCode(160):e>59900?(e/6e4).toFixed(1)+" m"+String.fromCharCode(160):e.toFixed(1)+" ms"}