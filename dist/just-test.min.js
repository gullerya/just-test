import*as DataTier from"./libs/data-tier/data-tier.min.js";import{STATUSES}from"./test.js";import{Suite}from"./suite.js";export{createSuite};const initParams={},model=DataTier.ties.create("justTestModel",{passed:0,failed:0,skipped:0,total:0,done:0,suites:[]}).model;function createSuite(t){const e=new Suite(t);return model.suites.push({id:e.id,name:e.name,passed:0,failed:0,skipped:0,tests:[]}),e.addEventListener("testAdded",onTestAdded),e.addEventListener("testFinished",onTestFinished),e.addEventListener("finished",onSuiteFinished),e}function onTestAdded(t){const e=t.detail.test,i=model.suites.find(e=>e.id===t.detail.suiteId);model.total++,i.tests.push({id:e.id,name:e.name,status:e.status})}function onTestFinished(t){const e=t.detail.test,i=model.suites.find(e=>e.id===t.detail.suiteId),s=i.tests.find(t=>t.id===e.id);model.done++,e.status===STATUSES.PASSED?(model.passed++,i.passed++):e.status===STATUSES.FAILED||e.status===STATUSES.ERRORED?(model.failed++,i.failed++):e.status===STATUSES.SKIPPED&&(model.skipped++,i.skipped++),s.status=e.status,s.error=e.error,s.duration=e.duration}function onSuiteFinished(t){const e=t.detail.suite;model.suites.find(t=>t.id===e.id).duration=stringifyDuration(e.duration)}function stringifyDuration(t){let e="";return e=t>99?(t/1e3).toFixed(1)+" s"+String.fromCharCode(160):t>59900?(t/6e4).toFixed(1)+" m"+String.fromCharCode(160):t.toFixed(1)+" ms"}Array.from(new URL(import.meta.url).searchParams).forEach(t=>{initParams[t[0]]=t[1]}),Object.keys(initParams).length?(console.info("JT: init params are as following"),console.dir(initParams)):console.info("JT: no init params found"),initParams.headless||document.querySelectorAll("just-test-view").length||import("./views/just-test-view.js").then(()=>{const t=document.createElement("just-test-view");initParams.minimized&&t.classList.add("minimized"),t.dataset.tie="justTestModel",document.body.appendChild(t)});