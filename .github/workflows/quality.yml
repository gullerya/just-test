name: Quality pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  quality_pipeline_static_analysis:
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint

  quality_pipeline_chromium:
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install
        run: |
          npm ci
          npx playwright install chromium --with-deps

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test:ci:chromium

      - name: Report coverage
        uses: codecov/codecov-action@v3

  quality_pipeline_firefox:
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install
        run: |
          npm ci
          npx playwright install firefox --with-deps

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test:ci:firefox

  quality_pipeline_webkit:
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install
        run: |
          npm ci
          npx playwright install webkit --with-deps

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test:ci:webkit

  quality_pipeline_nodejs:
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test:ci:nodejs

      - name: Report coverage
        uses: codecov/codecov-action@v3

  render-graphs:
    runs-on: ubuntu-20.04
    env:
      D2_LAYOUT: elk

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.JT_CI_AT }}

      - name: Install D2
        run: curl -fsSL https://d2lang.com/install.sh | sh -s --

      - name: Render
        run: |
          d2 docs/architecture.d2 docs/architecture.svg

      - name: Commit & Push
        run: |
          git config user.email "gullerya@gmail.com"
          git config user.name "GullerYA CI"
          git add --all
          git commit -m 'adding rendered graphics' || echo "No changes to commit"
          git push